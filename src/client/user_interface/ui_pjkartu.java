/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.user_interface;

import client.process_control.client_registry_lookupRMI;
import client.process_control.load_client_attribute;
import client.process_control.upload_client_attribute;
import database.query_control.connection;
import database.query_control.select.select_attribute;
import database.query_control.update.update_attribute;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.InputEvent;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import template.client_render;

/**
 *
 * @author user
 */
public class ui_pjkartu extends javax.swing.JFrame {

    /**
     * Creates new form ui_spp
     */
    private final connection con = new connection();
    private final select_attribute sa = new select_attribute();
    private final update_attribute ua = new update_attribute();
    private final load_client_attribute lca = new load_client_attribute();
    private final upload_client_attribute uca = new upload_client_attribute();
    private final client_registry_lookupRMI crl = new client_registry_lookupRMI();
    private interfaces.server.server iss;
    private InetAddress ip;
    private Thread thr;

    @SuppressWarnings("OverridableMethodCallInConstructor")
    public ui_pjkartu() {
        initComponents();
        ImageIcon ico = new ImageIcon((getClass().getResource("/image/SP.png")));
        setIconImage(ico.getImage());
        ((DefaultTableCellRenderer) table1.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        table1.getTableHeader().setFont(new java.awt.Font("Cambria Math", 1, 13));
        table1.setDefaultRenderer(Object.class, new client_render());
        ((DefaultTableCellRenderer) table2.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        table2.getTableHeader().setFont(new java.awt.Font("Cambria Math", 1, 13));
        table2.setDefaultRenderer(Object.class, new client_render());
        get_attribute();
    }

    private void get_attribute() {
        sa.connection(con.connection());
        ArrayList<String> kategori_attribute = sa.get_queue_category();
        for (int i = 0; i < kategori_attribute.size(); i++) {
            kategori.addItem(kategori_attribute.get(i));
        }
        ArrayList<String> nomeja_attribute = sa.get_queue_counter();
        for (int i = 0; i < nomeja_attribute.size(); i++) {
            nomeja.addItem(nomeja_attribute.get(i));
        }
        lca.load();
        if (kategori.getSelectedIndex() == 1 || kategori.getSelectedIndex() == 2) {
            kategori.setSelectedIndex(Integer.parseInt(lca.category()));
        } else {
            kategori.setSelectedIndex(1);
        }
        nama.setText(lca.name());
        nomeja.setSelectedIndex(Integer.parseInt(lca.number()));
        ubah.requestFocus();
    }

    private void set_attribute() {
        uca.upload(String.valueOf(kategori.getSelectedIndex()), nama.getText(), String.valueOf(nomeja.getSelectedIndex()));
        ubah("Ubah", "/image/EncrypDecryp.png", 'b', "<html><b>[Alt + b]</b> Ubah</html>", false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        desktop1 = new template.desktop();
        panel_b1 = new template.panel_b();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        kategori = new javax.swing.JComboBox<>();
        nama = new javax.swing.JTextField();
        nomeja = new javax.swing.JComboBox<>();
        ubah = new javax.swing.JButton();
        simpan = new javax.swing.JButton();
        mulai = new javax.swing.JButton();
        logo_pjk1 = new template.logo_pjk();
        panel_b2 = new template.panel_b();
        panel_a1 = new template.panel_a();
        antrian = new javax.swing.JLabel();
        panel_b3 = new template.panel_b();
        panel_a2 = new template.panel_a();
        setoran = new javax.swing.JRadioButton();
        tabungan = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        normal = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        panel_b4 = new template.panel_b();
        panel_a3 = new template.panel_a();
        nomor = new javax.swing.JLabel();
        panel_b5 = new template.panel_b();
        panel_a4 = new template.panel_a();
        panggil = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        ulang = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        hangus = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        audit = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        kasir = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        panel_b6 = new template.panel_b();
        panel_a5 = new template.panel_a();
        tb_acc = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        tb_kasir = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AntrianPJKartu v.19");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        panel_b1.setBackground(new java.awt.Color(255, 255, 102));
        panel_b1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setText("Kategori");

        jLabel2.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 102));
        jLabel2.setText("Nama");

        jLabel3.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 102));
        jLabel3.setText("No. Meja");

        kategori.setFont(new java.awt.Font("Cambria Math", 1, 12)); // NOI18N
        kategori.setForeground(new java.awt.Color(0, 0, 102));
        kategori.setToolTipText("Kategori panggilan");
        kategori.setEnabled(false);
        kategori.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kategoriKeyPressed(evt);
            }
        });

        nama.setFont(new java.awt.Font("Cambria Math", 1, 12)); // NOI18N
        nama.setForeground(new java.awt.Color(0, 0, 102));
        nama.setToolTipText("Nama user");
        nama.setEnabled(false);
        nama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                namaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                namaKeyTyped(evt);
            }
        });

        nomeja.setFont(new java.awt.Font("Cambria Math", 1, 12)); // NOI18N
        nomeja.setForeground(new java.awt.Color(0, 0, 102));
        nomeja.setToolTipText("Nomor meja");
        nomeja.setEnabled(false);
        nomeja.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nomejaKeyPressed(evt);
            }
        });

        ubah.setFont(new java.awt.Font("Cambria Math", 1, 12)); // NOI18N
        ubah.setForeground(new java.awt.Color(0, 0, 102));
        ubah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/EncrypDecryp.png"))); // NOI18N
        ubah.setMnemonic('b');
        ubah.setText("Ubah");
        ubah.setToolTipText("<html><b>[Alt + b]</b> Ubah</html>");
        ubah.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahActionPerformed(evt);
            }
        });
        ubah.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ubahKeyPressed(evt);
            }
        });

        simpan.setFont(new java.awt.Font("Cambria Math", 1, 12)); // NOI18N
        simpan.setForeground(new java.awt.Color(0, 0, 102));
        simpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Save File.png"))); // NOI18N
        simpan.setMnemonic('S');
        simpan.setText("Simpan");
        simpan.setToolTipText("<html><b>[Alt + S]</b> Simpan</html>");
        simpan.setEnabled(false);
        simpan.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });
        simpan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                simpanKeyPressed(evt);
            }
        });

        mulai.setFont(new java.awt.Font("Cambria Math", 1, 12)); // NOI18N
        mulai.setForeground(new java.awt.Color(0, 0, 102));
        mulai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/on - Copy.png"))); // NOI18N
        mulai.setMnemonic('M');
        mulai.setText("Mulai");
        mulai.setToolTipText("<html><b>[Alt + M]</b> Mulai</html>");
        mulai.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        mulai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mulaiActionPerformed(evt);
            }
        });
        mulai.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mulaiKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout logo_pjk1Layout = new javax.swing.GroupLayout(logo_pjk1);
        logo_pjk1.setLayout(logo_pjk1Layout);
        logo_pjk1Layout.setHorizontalGroup(
            logo_pjk1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 82, Short.MAX_VALUE)
        );
        logo_pjk1Layout.setVerticalGroup(
            logo_pjk1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 77, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panel_b1Layout = new javax.swing.GroupLayout(panel_b1);
        panel_b1.setLayout(panel_b1Layout);
        panel_b1Layout.setHorizontalGroup(
            panel_b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_b1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logo_pjk1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addGroup(panel_b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(kategori, 0, 135, Short.MAX_VALUE)
                        .addComponent(nama))
                    .addComponent(nomeja, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel_b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(simpan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mulai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ubah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel_b1Layout.setVerticalGroup(
            panel_b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_b1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(panel_b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(logo_pjk1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel_b1Layout.createSequentialGroup()
                        .addGroup(panel_b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(kategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ubah))
                        .addGap(1, 1, 1)
                        .addGroup(panel_b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(simpan))
                        .addGap(1, 1, 1)
                        .addGroup(panel_b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(nomeja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mulai))))
                .addGap(5, 5, 5))
        );

        panel_b2.setBackground(new java.awt.Color(255, 255, 102));
        panel_b2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        panel_a1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Antrian Saat Ini", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Cambria Math", 1, 12), new java.awt.Color(0, 0, 102))); // NOI18N

        antrian.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        antrian.setText("<html> <tr style='border-bottom:1pt'> <td>SPP</td> <td>: 0</td> </tr> <tr style='border-bottom:1pt'> <td>Setoran</td> <td>: 0</td> </tr> <tr style='border-bottom:1pt'> <td>Tab./T-Angs.</td> <td>: 0</td> </tr> <tr style='border-bottom:1pt'> <td>Kasir</td> <td>: 0</td></tr> </html>");
        antrian.setToolTipText("Antrian saat ini");
        antrian.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        antrian.setEnabled(false);

        javax.swing.GroupLayout panel_a1Layout = new javax.swing.GroupLayout(panel_a1);
        panel_a1.setLayout(panel_a1Layout);
        panel_a1Layout.setHorizontalGroup(
            panel_a1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_a1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(antrian, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );
        panel_a1Layout.setVerticalGroup(
            panel_a1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_a1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(antrian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panel_b2Layout = new javax.swing.GroupLayout(panel_b2);
        panel_b2.setLayout(panel_b2Layout);
        panel_b2Layout.setHorizontalGroup(
            panel_b2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_b2Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(panel_a1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );
        panel_b2Layout.setVerticalGroup(
            panel_b2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_b2Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(panel_a1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        panel_b3.setBackground(new java.awt.Color(255, 255, 102));
        panel_b3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        panel_a2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Setting Pemanggilan", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Cambria Math", 1, 12), new java.awt.Color(0, 0, 102))); // NOI18N

        buttonGroup1.add(setoran);
        setoran.setFont(new java.awt.Font("Cambria Math", 1, 12)); // NOI18N
        setoran.setForeground(new java.awt.Color(0, 0, 102));
        setoran.setMnemonic('O');
        setoran.setText("Setoran");
        setoran.setToolTipText("<html><b>[Alt + o]</b> Panggilan setoran</html>");
        setoran.setEnabled(false);
        setoran.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                setoranKeyPressed(evt);
            }
        });

        buttonGroup1.add(tabungan);
        tabungan.setFont(new java.awt.Font("Cambria Math", 1, 12)); // NOI18N
        tabungan.setForeground(new java.awt.Color(0, 0, 102));
        tabungan.setMnemonic('T');
        tabungan.setText("Tab./T-Angs.");
        tabungan.setToolTipText("<html><b>[Alt + T]</b> Panggilan antrian tabungan</html>");
        tabungan.setEnabled(false);
        tabungan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabunganKeyPressed(evt);
            }
        });

        jSeparator1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        buttonGroup1.add(normal);
        normal.setFont(new java.awt.Font("Cambria Math", 1, 12)); // NOI18N
        normal.setForeground(new java.awt.Color(0, 0, 102));
        normal.setMnemonic('N');
        normal.setSelected(true);
        normal.setText("Normal");
        normal.setToolTipText("<html><b>[Alt + N]</b> Panggilan sesuai antrian</html>");
        normal.setEnabled(false);
        normal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                normalKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panel_a2Layout = new javax.swing.GroupLayout(panel_a2);
        panel_a2.setLayout(panel_a2Layout);
        panel_a2Layout.setHorizontalGroup(
            panel_a2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_a2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_a2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(panel_a2Layout.createSequentialGroup()
                        .addGap(0, 8, Short.MAX_VALUE)
                        .addComponent(setoran)
                        .addGap(10, 10, 10)
                        .addComponent(tabungan)
                        .addGap(0, 9, Short.MAX_VALUE))
                    .addGroup(panel_a2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(normal)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panel_a2Layout.setVerticalGroup(
            panel_a2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_a2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(panel_a2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setoran)
                    .addComponent(tabungan))
                .addGap(3, 3, 3)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(normal)
                .addContainerGap())
        );

        javax.swing.GroupLayout panel_b3Layout = new javax.swing.GroupLayout(panel_b3);
        panel_b3.setLayout(panel_b3Layout);
        panel_b3Layout.setHorizontalGroup(
            panel_b3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_b3Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(panel_a2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );
        panel_b3Layout.setVerticalGroup(
            panel_b3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_b3Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(panel_a2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        table1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "HANGUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table1.setToolTipText("");
        table1.setEnabled(false);
        table1.setRowHeight(20);
        jScrollPane1.setViewportView(table1);
        if (table1.getColumnModel().getColumnCount() > 0) {
            table1.getColumnModel().getColumn(0).setResizable(false);
        }

        jScrollPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        table2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "AUDIT/ACC"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table2.setToolTipText("<html>Nomor yang belum dioper kasir.<br/>(klik <b>\"kanan\"</b> untuk acc / klik <b>\"kiri\"</b> untuk kasir)</html>");
        table2.setEnabled(false);
        table2.setRowHeight(20);
        table2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table2);
        if (table2.getColumnModel().getColumnCount() > 0) {
            table2.getColumnModel().getColumn(0).setResizable(false);
        }

        panel_b4.setBackground(new java.awt.Color(255, 255, 102));
        panel_b4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        panel_a3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Nomor Panggilan", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Cambria Math", 1, 12), new java.awt.Color(0, 0, 102))); // NOI18N

        nomor.setFont(new java.awt.Font("Cambria Math", 1, 70)); // NOI18N
        nomor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nomor.setText("0000");
        nomor.setToolTipText("Nomor panggilan");
        nomor.setEnabled(false);
        nomor.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout panel_a3Layout = new javax.swing.GroupLayout(panel_a3);
        panel_a3.setLayout(panel_a3Layout);
        panel_a3Layout.setHorizontalGroup(
            panel_a3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_a3Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(nomor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );
        panel_a3Layout.setVerticalGroup(
            panel_a3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(nomor, javax.swing.GroupLayout.PREFERRED_SIZE, 65, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panel_b4Layout = new javax.swing.GroupLayout(panel_b4);
        panel_b4.setLayout(panel_b4Layout);
        panel_b4Layout.setHorizontalGroup(
            panel_b4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_b4Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(panel_a3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );
        panel_b4Layout.setVerticalGroup(
            panel_b4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_b4Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(panel_a3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        panel_b5.setBackground(new java.awt.Color(255, 255, 102));
        panel_b5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        panel_a4.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        panggil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/appbar.sound.2.png"))); // NOI18N
        panggil.setMnemonic('P');
        panggil.setToolTipText("<html><b>[Alt + P]</b> Panggil</html>");
        panggil.setEnabled(false);
        panggil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                panggilActionPerformed(evt);
            }
        });
        panggil.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                panggilKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Cambria Math", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 102));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("<html><u>P</u>anggil</html>");

        ulang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/appbar.reset.png"))); // NOI18N
        ulang.setMnemonic('U');
        ulang.setToolTipText("<html><b>[Alt + U]</b> Ulang</html>");
        ulang.setEnabled(false);
        ulang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ulangActionPerformed(evt);
            }
        });
        ulang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ulangKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Cambria Math", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 102));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("<html><u>U</u>lang</html>");

        hangus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/appbar.group.delete.png"))); // NOI18N
        hangus.setMnemonic('H');
        hangus.setToolTipText("<html><b>[Alt + H]</b> Hangus</html>");
        hangus.setEnabled(false);
        hangus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hangusActionPerformed(evt);
            }
        });
        hangus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hangusKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Cambria Math", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 102));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("<html><u>H</u>angus</html>");

        audit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/appbar.page.text2.png"))); // NOI18N
        audit.setMnemonic('d');
        audit.setToolTipText("<html><b>[Alt + d]</b> Audit</html>");
        audit.setEnabled(false);
        audit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                auditActionPerformed(evt);
            }
        });
        audit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                auditKeyPressed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Cambria Math", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 102));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("<html>Au<u>d</u>it</html>");

        kasir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/appbar.money.png"))); // NOI18N
        kasir.setMnemonic('K');
        kasir.setToolTipText("<html><b>[Alt + K]</b> Kasir</html>");
        kasir.setEnabled(false);
        kasir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kasirActionPerformed(evt);
            }
        });
        kasir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kasirKeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Cambria Math", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 102));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("<html><u>K</u>asir</html>");

        javax.swing.GroupLayout panel_a4Layout = new javax.swing.GroupLayout(panel_a4);
        panel_a4.setLayout(panel_a4Layout);
        panel_a4Layout.setHorizontalGroup(
            panel_a4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_a4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel_a4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(panggil, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_a4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ulang, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_a4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(hangus, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_a4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(audit, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_a4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(kasir, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_a4Layout.setVerticalGroup(
            panel_a4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_a4Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(panel_a4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panggil)
                    .addComponent(ulang)
                    .addComponent(hangus)
                    .addComponent(audit)
                    .addComponent(kasir))
                .addGap(3, 3, 3)
                .addGroup(panel_a4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        javax.swing.GroupLayout panel_b5Layout = new javax.swing.GroupLayout(panel_b5);
        panel_b5.setLayout(panel_b5Layout);
        panel_b5Layout.setHorizontalGroup(
            panel_b5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_b5Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(panel_a4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );
        panel_b5Layout.setVerticalGroup(
            panel_b5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_b5Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(panel_a4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        panel_b6.setBackground(new java.awt.Color(0, 255, 204));
        panel_b6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        panel_a5.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        tb_acc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/appbar.reply.people.png"))); // NOI18N
        tb_acc.setMnemonic('C');
        tb_acc.setToolTipText("<html><b>[Alt + C]</b> Panggil ACC Audit</html>");
        tb_acc.setEnabled(false);
        tb_acc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_accActionPerformed(evt);
            }
        });
        tb_acc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tb_accKeyPressed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Cambria Math", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 102));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("<html>A<u>C</u>C</html>");

        tb_kasir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/appbar.money.png"))); // NOI18N
        tb_kasir.setMnemonic('a');
        tb_kasir.setToolTipText("<html><b>[Alt + a]</b>Audit/ACC dipindahkan kasir</html>");
        tb_kasir.setEnabled(false);
        tb_kasir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_kasirActionPerformed(evt);
            }
        });
        tb_kasir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tb_kasirKeyPressed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Cambria Math", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 102));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("<html>K<u>a</u>sir</html>");

        javax.swing.GroupLayout panel_a5Layout = new javax.swing.GroupLayout(panel_a5);
        panel_a5.setLayout(panel_a5Layout);
        panel_a5Layout.setHorizontalGroup(
            panel_a5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_a5Layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(panel_a5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tb_acc, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(panel_a5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tb_kasir, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        panel_a5Layout.setVerticalGroup(
            panel_a5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_a5Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(panel_a5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tb_acc)
                    .addComponent(tb_kasir))
                .addGap(3, 3, 3)
                .addGroup(panel_a5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        javax.swing.GroupLayout panel_b6Layout = new javax.swing.GroupLayout(panel_b6);
        panel_b6.setLayout(panel_b6Layout);
        panel_b6Layout.setHorizontalGroup(
            panel_b6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_b6Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(panel_a5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );
        panel_b6Layout.setVerticalGroup(
            panel_b6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_b6Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(panel_a5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        desktop1.setLayer(panel_b1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktop1.setLayer(panel_b2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktop1.setLayer(panel_b3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktop1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktop1.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktop1.setLayer(panel_b4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktop1.setLayer(panel_b5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktop1.setLayer(panel_b6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout desktop1Layout = new javax.swing.GroupLayout(desktop1);
        desktop1.setLayout(desktop1Layout);
        desktop1Layout.setHorizontalGroup(
            desktop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(desktop1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(desktop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(desktop1Layout.createSequentialGroup()
                        .addComponent(panel_b2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(desktop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(panel_b4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panel_b3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(panel_b1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_b5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(desktop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(desktop1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(desktop1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panel_b6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(5, 5, 5))
        );
        desktop1Layout.setVerticalGroup(
            desktop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(desktop1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(desktop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(desktop1Layout.createSequentialGroup()
                        .addComponent(panel_b1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addGroup(desktop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(desktop1Layout.createSequentialGroup()
                                .addComponent(panel_b4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(panel_b3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(panel_b2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addGroup(desktop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_b5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_b6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahActionPerformed
        if ("Ubah".equals(ubah.getText())) {
            ubah("Batal", "/image/Save Cancel.png", 'B', "<html><b>[Alt + B]</b> Batal</html>", true);
            kategori.requestFocus();
        } else {
            ubah("Ubah", "/image/EncrypDecryp.png", 'b', "<html><b>[Alt + b]</b> Ubah</html>", false);
            kategori.setSelectedIndex(Integer.parseInt(lca.category()));
            nama.setText(lca.name());
            nomeja.setSelectedIndex(Integer.parseInt(lca.number()));
            ubah.requestFocus();
        }
    }//GEN-LAST:event_ubahActionPerformed

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed
        if (kategori.getSelectedIndex() == 1 || kategori.getSelectedIndex() == 2) {
            set_attribute();
        } else {
            JOptionPane.showMessageDialog(this, "<html>Aplikasi ini hanya untuk kategori <b><u>" + kategori.getItemAt(1) + "/" + kategori.getItemAt(2) + "</u></b></html>", "Failed", JOptionPane.PLAIN_MESSAGE);
            kategori.requestFocus();
        }
    }//GEN-LAST:event_simpanActionPerformed

    private String[] get_data_attribute(String mulai) {
        String hostname = null, name = null, category = "0", status = "0";
        if ("Mulai".equals(mulai)) {
            hostname = "'" + ip.getHostAddress() + "'";
            name = "'" + nama.getText() + "'";
            category = String.valueOf(kategori.getSelectedIndex() + 1);
            status = String.valueOf(1);
        }
        String data[] = new String[]{String.valueOf(nomeja.getSelectedIndex() + 1), hostname, name, category, status};
        return data;
    }

    private void mulaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mulaiActionPerformed
        if ("Mulai".equals(mulai.getText())) {
            try {
                ip = InetAddress.getLocalHost();
                boolean bl = sa.check_client_status(nomeja.getSelectedIndex() + 1);
                if (bl == false) {
                    if (crl.lookup() != null) {
                        crl.registry(antrian, table1, 2, ip, nomeja.getSelectedIndex() + 1);
                        ua.connection(con.connection());
                        ua.set_counter(get_data_attribute(mulai.getText()));
                        mulai("Berhenti", "/image/off - Copy.png", 'e', "<html><b>[Alt + e]</b> Berhenti</html>", true);
                        sa.get_client_list_normal(antrian);
                        fire_number();
                        audit_number();
                        last_number();
                        normal.transferFocus();
                    } else {
                        JOptionPane.showMessageDialog(this, "Jaringan server tidak dapat diakses!", "Failed", JOptionPane.PLAIN_MESSAGE);
                    }
                }
            } catch (UnknownHostException ex) {
                Logger.getLogger(ui_pjkartu.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            ua.set_counter(get_data_attribute(mulai.getText()));
            crl.close(ip, nomeja.getSelectedIndex() + 1);
            mulai("Mulai", "/image/on - Copy.png", 'M', "<html><b>[Alt + M]</b> Mulai</html>", false);
            bersih();
            close_setup(false);
            close_button(false);
            close_button_table(false);
            nomeja.transferFocus();
        }
    }//GEN-LAST:event_mulaiActionPerformed

    private void ubah(String text, String url, char mnemonic, String text_tool, boolean bl) {
        ubah.setText(text);
        ubah.setIcon(new javax.swing.ImageIcon(getClass().getResource(url)));
        ubah.setMnemonic(mnemonic);
        ubah.setToolTipText(text_tool);
        simpan.setEnabled(bl);
        mulai.setEnabled(!bl);
        kategori.setEnabled(bl);
        nama.setEnabled(bl);
        nomeja.setEnabled(bl);
    }

    private void mulai(String text, String url, char mnemonic, String text_tool, boolean bl) {
        mulai.setText(text);
        mulai.setIcon(new javax.swing.ImageIcon(getClass().getResource(url)));
        mulai.setMnemonic(mnemonic);
        mulai.setToolTipText(text_tool);
        ubah.setEnabled(!bl);
        setoran.setEnabled(bl);
        tabungan.setEnabled(bl);
        normal.setEnabled(bl);
        if (kategori.getSelectedIndex() == 1) {
            setoran.setSelected(true);
        } else {
            normal.setSelected(true);
        }
        panggil.setEnabled(bl);
        antrian.setEnabled(bl);
        nomor.setEnabled(bl);
    }

    private void last_number() {
        ArrayList<String> nomor_antrian = sa.get_last_number(2, Integer.parseInt(nomeja.getSelectedItem().toString()));
        if (nomor_antrian.size() > 1) {
            DefaultTableModel dtm = (DefaultTableModel) table2.getModel();
            String data[] = new String[1];
            for (int i = 0; i < nomor_antrian.size(); i++) {
                data[0] = nomor_antrian.get(i);
                dtm.addRow(data);
            }
            table2.setEnabled(true);
            close_button_table(true);
            panggil.setEnabled(true);
        } else if (nomor_antrian.size() == 1) {
            nomor.setText(nomor_antrian.get(0));
            close_setup(false);
            close_button(true);
            panggil.setEnabled(false);
        }
    }

    private void fire_number() {
        ArrayList<String> nomor_antrian = sa.get_fire_number(2, 3);
        DefaultTableModel dtm = (DefaultTableModel) table1.getModel();
        String data[] = new String[1];
        for (int i = 0; i < nomor_antrian.size(); i++) {
            data[0] = nomor_antrian.get(i);
            dtm.addRow(data);
        }
    }

    private void audit_number() {
        ArrayList<String> nomor_antrian = sa.get_audit_number(Integer.parseInt(nomeja.getSelectedItem().toString()));
        if (nomor_antrian.size() > 0) {
            DefaultTableModel dtm = (DefaultTableModel) table2.getModel();
            String data[] = new String[1];
            for (int i = 0; i < nomor_antrian.size(); i++) {
                data[0] = nomor_antrian.get(i);
                dtm.addRow(data);
            }
            table2.setEnabled(true);
            close_button_table(true);
            panggil.setEnabled(true);
        }
    }

    private void bersih() {
        antrian.setText("<html> <tr style='border-bottom:1pt'> <td>SPP</td> <td>: 0</td> </tr> <tr style='border-bottom:1pt'> <td>Setoran</td> <td>: 0</td> </tr> <tr style='border-bottom:1pt'> <td>Tab./T-Angs.</td> <td>: 0</td> </tr> <tr style='border-bottom:1pt'> <td>Kasir</td> <td>: 0</td></tr> </html>");
        antrian.setForeground(Color.black);
        nomor.setText("0000");
        DefaultTableModel dtm1 = (DefaultTableModel) table1.getModel();
        dtm1.getDataVector().removeAllElements();
        dtm1.fireTableDataChanged();
        table1.setEnabled(false);
        DefaultTableModel dtm2 = (DefaultTableModel) table2.getModel();
        dtm2.getDataVector().removeAllElements();
        dtm2.fireTableDataChanged();
        table2.setEnabled(false);
    }

    @SuppressWarnings("static-access")
    private void kategoriKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kategoriKeyPressed
        if (evt.getKeyCode() == evt.VK_RIGHT || evt.getKeyCode() == evt.VK_ENTER) {
            ubah.transferFocus();
        }
        if (evt.getKeyCode() == evt.VK_LEFT) {
            mulai.transferFocusBackward();
        }
    }//GEN-LAST:event_kategoriKeyPressed

    @SuppressWarnings("static-access")
    private void namaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_namaKeyPressed
        if (evt.getKeyCode() == evt.VK_RIGHT) {
            if (nama.getCaretPosition() == nama.getText().length()) {
                simpan.transferFocus();
            }
        }
        if (evt.getKeyCode() == evt.VK_LEFT) {
            if (nama.getCaretPosition() == 0) {
                ubah.transferFocusBackward();
            }
        }
        if (evt.getKeyCode() == evt.VK_UP) {
            ubah.transferFocusBackward();
        }
        if (evt.getKeyCode() == evt.VK_DOWN || evt.getKeyCode() == evt.VK_ENTER) {
            simpan.transferFocus();
        }
    }//GEN-LAST:event_namaKeyPressed

    private void namaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_namaKeyTyped
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
    }//GEN-LAST:event_namaKeyTyped

    @SuppressWarnings("static-access")
    private void nomejaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomejaKeyPressed
        if (evt.getKeyCode() == evt.VK_RIGHT) {
            kategori.transferFocus();
        }
        if (evt.getKeyCode() == evt.VK_LEFT) {
            simpan.transferFocusBackward();
        }
        if (evt.getKeyCode() == evt.VK_ENTER) {
            nama.transferFocus();
        }
    }//GEN-LAST:event_nomejaKeyPressed

    @SuppressWarnings("static-access")
    private void ubahKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ubahKeyPressed
        if (evt.getKeyCode() == evt.VK_RIGHT || evt.getKeyCode() == evt.VK_DOWN) {
            nama.transferFocus();
        }
        if (evt.getKeyCode() == evt.VK_LEFT || evt.getKeyCode() == evt.VK_UP) {
            kategori.transferFocusBackward();
        }
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if ("Ubah".equals(ubah.getText())) {
                ubah("Batal", "/image/Save Cancel.png", 'B', "<html><b>[Alt + B]</b> Batal</html>", true);
                kategori.requestFocus();
            } else {
                ubah("Ubah", "/image/EncrypDecryp.png", 'b', "<html><b>[Alt + b]</b> Ubah</html>", false);
                kategori.setSelectedIndex(Integer.parseInt(lca.category()));
                nama.setText(lca.name());
                nomeja.setSelectedIndex(Integer.parseInt(lca.number()));
                ubah.requestFocus();
            }
        }
    }//GEN-LAST:event_ubahKeyPressed

    @SuppressWarnings("static-access")
    private void simpanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_simpanKeyPressed
        if (evt.getKeyCode() == evt.VK_RIGHT || evt.getKeyCode() == evt.VK_DOWN) {
            nomeja.transferFocus();
        }
        if (evt.getKeyCode() == evt.VK_LEFT || evt.getKeyCode() == evt.VK_UP) {
            nama.transferFocusBackward();
        }
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (kategori.getSelectedIndex() == 1 || kategori.getSelectedIndex() == 2) {
                set_attribute();
            } else {
                JOptionPane.showMessageDialog(this, "<html>Aplikasi ini hanya untuk kategori <b><u>" + kategori.getItemAt(1) + "/" + kategori.getItemAt(2) + "</u></b></html>", "Failed", JOptionPane.PLAIN_MESSAGE);
                kategori.requestFocus();
            }
        }
    }//GEN-LAST:event_simpanKeyPressed

    @SuppressWarnings("static-access")
    private void mulaiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mulaiKeyPressed
        if (evt.getKeyCode() == evt.VK_RIGHT || evt.getKeyCode() == evt.VK_DOWN) {
            mulai.transferFocus();
        }
        if (evt.getKeyCode() == evt.VK_LEFT || evt.getKeyCode() == evt.VK_UP) {
            mulai.transferFocusBackward();
        }
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if ("Mulai".equals(mulai.getText())) {
                try {
                    ip = InetAddress.getLocalHost();
                    boolean bl = sa.check_client_status(nomeja.getSelectedIndex() + 1);
                    if (bl == false) {
                        if (crl.lookup() != null) {
                            crl.registry(antrian, table1, 2, ip, nomeja.getSelectedIndex() + 1);
                            ua.connection(con.connection());
                            ua.set_counter(get_data_attribute(mulai.getText()));
                            mulai("Berhenti", "/image/off - Copy.png", 'e', "<html><b>[Alt + e]</b> Berhenti</html>", true);
                            sa.get_client_list_normal(antrian);
                            last_number();
                            fire_number();
                            audit_number();
                            normal.transferFocus();
                        } else {
                            JOptionPane.showMessageDialog(this, "Jaringan server tidak dapat diakses!", "Failed", JOptionPane.PLAIN_MESSAGE);
                        }
                    }
                } catch (UnknownHostException ex) {
                    Logger.getLogger(ui_pjkartu.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                ua.set_counter(get_data_attribute(mulai.getText()));
                crl.close(ip, nomeja.getSelectedIndex() + 1);
                mulai("Mulai", "/image/on - Copy.png", 'M', "<html><b>[Alt + M]</b> Mulai</html>", false);
                bersih();
                close_setup(false);
                close_button(false);
                close_button_table(false);
                nomeja.transferFocus();
            }
        }
    }//GEN-LAST:event_mulaiKeyPressed

    @SuppressWarnings("static-access")
    private void setoranKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_setoranKeyPressed
        if (evt.getKeyCode() == evt.VK_RIGHT || evt.getKeyCode() == evt.VK_DOWN) {
            setoran.transferFocus();
        }
        if (evt.getKeyCode() == evt.VK_LEFT || evt.getKeyCode() == evt.VK_UP) {
            setoran.transferFocusBackward();
        }
        if (evt.getKeyCode() == evt.VK_ENTER) {
            normal.transferFocus();
        }
    }//GEN-LAST:event_setoranKeyPressed

    @SuppressWarnings("static-access")
    private void tabunganKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabunganKeyPressed
        if (evt.getKeyCode() == evt.VK_RIGHT || evt.getKeyCode() == evt.VK_DOWN) {
            tabungan.transferFocus();
        }
        if (evt.getKeyCode() == evt.VK_LEFT || evt.getKeyCode() == evt.VK_UP) {
            tabungan.transferFocusBackward();
        }
        if (evt.getKeyCode() == evt.VK_ENTER) {
            normal.transferFocus();
        }
    }//GEN-LAST:event_tabunganKeyPressed

    @SuppressWarnings("static-access")
    private void normalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_normalKeyPressed
        if (evt.getKeyCode() == evt.VK_RIGHT || evt.getKeyCode() == evt.VK_DOWN) {
            normal.transferFocus();
        }
        if (evt.getKeyCode() == evt.VK_LEFT || evt.getKeyCode() == evt.VK_UP) {
            normal.transferFocusBackward();
        }
        if (evt.getKeyCode() == evt.VK_ENTER) {
            normal.transferFocus();
        }
    }//GEN-LAST:event_normalKeyPressed

    private void close_setup(boolean bl) {
        setoran.setEnabled(bl);
        tabungan.setEnabled(bl);
        normal.setEnabled(bl);
    }

    private void close_button(boolean bl) {
        panggil.setEnabled(bl);
        ulang.setEnabled(bl);
        hangus.setEnabled(bl);
        audit.setEnabled(bl);
        kasir.setEnabled(bl);
    }

    private void close_button_table(boolean bl) {
        tb_acc.setEnabled(bl);
        tb_kasir.setEnabled(bl);
    }

    private class call implements Runnable {

        private Component com;

        public void call(Component com) {
            this.com = com;
        }

        @Override
        public void run() {
            try {
                mulai.setEnabled(false);
                close_setup(false);
                close_button(false);
                close_button_table(false);
                table1.setEnabled(false);
                table2.setEnabled(false);
                @SuppressWarnings("UnusedAssignment")
                boolean bl = false;
                iss = crl.lookup(); // lookup server
                String nomor_antrian = null;
                int id_setoran = 2;
                int id_tabungan = 3;
                int kategori_ = kategori.getSelectedIndex() + 1;
                if (setoran.isSelected()) {
                    nomor_antrian = iss.get_number(id_setoran, 3);
                    kategori_ = 2;
                } else if (tabungan.isSelected()) {
                    nomor_antrian = iss.get_number(id_tabungan, 5);
                    kategori_ = 3;
                } else if (normal.isSelected()) {
                    if (kategori.getSelectedIndex() + 1 == 2) {
                        nomor_antrian = iss.get_number_double_category(id_setoran, id_tabungan);
                        if (Integer.parseInt(nomor_antrian.substring(0, 1)) >= 3 || Integer.parseInt(nomor_antrian.substring(0, 1)) < 5) {
                            kategori_ = 2;
                        }
                        if (Integer.parseInt(nomor_antrian.substring(0, 1)) >= 5) {
                            kategori_ = 3;
                        }
                    } else if (kategori.getSelectedIndex() + 1 == 3) {
                        nomor_antrian = iss.get_number(id_tabungan, 5);
                        kategori_ = 3;
                        if (nomor_antrian == null) {
                            nomor_antrian = iss.get_number(id_setoran, 3);
                            kategori_ = 2;
                        }
                    }
                }
                if (nomor_antrian != null) {
                    int id_antrian = iss.id_number(nomor_antrian);
                    iss.refresh_queue(nomor_antrian, id_antrian, nama.getText(), 2, kategori_, Integer.parseInt(nomeja.getSelectedItem().toString()));
                    String array_nomor_anttrian[] = new String[1];
                    nomor.setText(nomor_antrian);
                    String nama_kategori = null;
                    if (nomor_antrian.substring(0, 1).equals("3")) {
                        nama_kategori = "Setoran PJ-KARTU";
                    } else if (nomor_antrian.substring(0, 1).equals("5")) {
                        nama_kategori = "Tab./T-Angs PJ-KARTU";
                    }
                    iss.call_number(nama_kategori, nomor_antrian, kategori_, Integer.parseInt(nomeja.getSelectedItem().toString()), 1);
                    // lookup display
                    bl = false;
                } else {
                    JOptionPane.showMessageDialog(com, "Nomor antrian habis", "Information", JOptionPane.PLAIN_MESSAGE);
                    bl = true;
                }
                mulai.setEnabled(true);
                if (bl == true) {
                    close_setup(true);
                    close_button(false);
                    panggil.setEnabled(true);
                } else {
                    close_setup(false);
                    close_button(true);
                    panggil.setEnabled(false);
                }
                if (table2.getRowCount() > 0) {
                    table2.setEnabled(true);
                    close_button_table(true);
                } else {
                    table2.setEnabled(false);
                    close_button_table(false);
                }
            } catch (RemoteException ex) {
                Logger.getLogger(ui_informasi.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private final call call = new call();

    private void panggilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_panggilActionPerformed
        call.call(this);
        thr = new Thread(call);
        thr.start();
    }//GEN-LAST:event_panggilActionPerformed

    @SuppressWarnings("static-access")
    private void panggilKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_panggilKeyPressed
        if (evt.getKeyCode() == evt.VK_RIGHT || evt.getKeyCode() == evt.VK_DOWN) {
            panggil.transferFocus();
        }
        if (evt.getKeyCode() == evt.VK_LEFT || evt.getKeyCode() == evt.VK_UP) {
            panggil.transferFocusBackward();
        }
        if (evt.getKeyCode() == evt.VK_ENTER) {
            call.call(this);
            thr = new Thread(call);
            thr.start();
        }
    }//GEN-LAST:event_panggilKeyPressed

    private class call_back implements Runnable {

        public void call_back() {
        }

        @Override
        public void run() {
            try {
                mulai.setEnabled(false);
                close_button(false);
                close_button_table(false);
                table1.setEnabled(false);
                table2.setEnabled(false);
                iss = crl.lookup(); // lookup panggilan antrian
                if (nomor.getText().substring(0, 1).equals("3")) {
                    iss.call_number("Setoran PJ-KARTU", nomor.getText(), 2, Integer.parseInt(nomeja.getSelectedItem().toString()), 1);
                } else if (nomor.getText().substring(0, 1).equals("5")) {
                    iss.call_number("Tab./T-Angs PJ-KARTU", nomor.getText(), 3, Integer.parseInt(nomeja.getSelectedItem().toString()), 1);
                }
                // lookup display
                mulai.setEnabled(true);
                close_button(true);
                panggil.setEnabled(false);
                if (table2.getRowCount() > 0) {
                    table2.setEnabled(true);
                    close_button_table(true);
                } else {
                    table2.setEnabled(false);
                    close_button_table(false);
                }
            } catch (RemoteException ex) {
                Logger.getLogger(ui_informasi.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private final call_back call_back = new call_back();

    private void ulangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ulangActionPerformed
        thr = new Thread(call_back);
        thr.start();
    }//GEN-LAST:event_ulangActionPerformed

    @SuppressWarnings("static-access")
    private void ulangKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ulangKeyPressed
        if (evt.getKeyCode() == evt.VK_RIGHT || evt.getKeyCode() == evt.VK_DOWN) {
            ulang.transferFocus();
        }
        if (evt.getKeyCode() == evt.VK_LEFT || evt.getKeyCode() == evt.VK_UP) {
            ulang.transferFocusBackward();
        }
        if (evt.getKeyCode() == evt.VK_ENTER) {
            thr = new Thread(call_back);
            thr.start();
        }
    }//GEN-LAST:event_ulangKeyPressed

    private void hangusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hangusActionPerformed
        try {
            String nomor_antrian = nomor.getText();
            iss = crl.lookup(); // lookup panggilan antrian
            int id_antrian = iss.id_number(nomor_antrian);
            iss.fire_number(nomor_antrian, id_antrian, kategori.getSelectedIndex() + 1, 4, Integer.parseInt(nomeja.getSelectedItem().toString()));
            close_setup(true);
            close_button(false);
            panggil.setEnabled(true);
            nomor.setText("0000");
        } catch (RemoteException ex) {
            Logger.getLogger(ui_informasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_hangusActionPerformed

    @SuppressWarnings("static-access")
    private void hangusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hangusKeyPressed
        if (evt.getKeyCode() == evt.VK_RIGHT || evt.getKeyCode() == evt.VK_DOWN) {
            hangus.transferFocus();
        }
        if (evt.getKeyCode() == evt.VK_LEFT || evt.getKeyCode() == evt.VK_UP) {
            hangus.transferFocusBackward();
        }
        if (evt.getKeyCode() == evt.VK_ENTER) {
            try {
                String nomor_antrian = nomor.getText();
                iss = crl.lookup(); // lookup panggilan antrian
                int id_antrian = iss.id_number(nomor_antrian);
                iss.fire_number(nomor_antrian, id_antrian, kategori.getSelectedIndex() + 1, 4, Integer.parseInt(nomeja.getSelectedItem().toString()));
                close_setup(true);
                close_button(false);
                panggil.setEnabled(true);
                nomor.setText("0000");
            } catch (RemoteException ex) {
                Logger.getLogger(ui_informasi.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_hangusKeyPressed

    private void auditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_auditActionPerformed
        try {
            String nomor_antrian = nomor.getText();
            iss = crl.lookup(); // lookup panggilan antrian
            int id_antrian = iss.id_number(nomor_antrian);
            iss.audit_number(nomor_antrian, id_antrian, 3, Integer.parseInt(nomeja.getSelectedItem().toString()));
            DefaultTableModel dtm = (DefaultTableModel) table2.getModel();
            String array_nomor_anttrian[] = new String[1];
            array_nomor_anttrian[0] = nomor_antrian;
            dtm.addRow(array_nomor_anttrian);
            close_setup(true);
            close_button(false);
            panggil.setEnabled(true);
            close_button_table(true);
            table2.setEnabled(true);
            nomor.setText("0000");
        } catch (RemoteException ex) {
            Logger.getLogger(ui_informasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_auditActionPerformed

    @SuppressWarnings("static-access")
    private void auditKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_auditKeyPressed
        if (evt.getKeyCode() == evt.VK_RIGHT || evt.getKeyCode() == evt.VK_DOWN) {
            audit.transferFocus();
        }
        if (evt.getKeyCode() == evt.VK_LEFT || evt.getKeyCode() == evt.VK_UP) {
            audit.transferFocusBackward();
        }
        if (evt.getKeyCode() == evt.VK_ENTER) {
            try {
                String nomor_antrian = nomor.getText();
                iss = crl.lookup(); // lookup panggilan antrian
                int id_antrian = iss.id_number(nomor_antrian);
                iss.audit_number(nomor_antrian, id_antrian, 3, Integer.parseInt(nomeja.getSelectedItem().toString()));
                DefaultTableModel dtm = (DefaultTableModel) table2.getModel();
                String array_nomor_anttrian[] = new String[1];
                array_nomor_anttrian[0] = nomor_antrian;
                dtm.addRow(array_nomor_anttrian);
                close_setup(true);
                close_button(false);
                panggil.setEnabled(true);
                close_button_table(true);
                table2.setEnabled(true);
                nomor.setText("0000");
            } catch (RemoteException ex) {
                Logger.getLogger(ui_informasi.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_auditKeyPressed

    private void kasirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kasirActionPerformed
        try {
            String nomor_antrian = nomor.getText();
            iss = crl.lookup(); // lookup panggilan antrian
            int id_antrian = iss.id_number(nomor_antrian);
            iss.cashier_number(nomor_antrian, id_antrian, 4, 1, 5, Integer.parseInt(nomeja.getSelectedItem().toString()));
            close_setup(true);
            close_button(false);
            panggil.setEnabled(true);
            nomor.setText("0000");
        } catch (RemoteException ex) {
            Logger.getLogger(ui_informasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kasirActionPerformed

    @SuppressWarnings("static-access")
    private void kasirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kasirKeyPressed
        if (evt.getKeyCode() == evt.VK_RIGHT || evt.getKeyCode() == evt.VK_DOWN) {
            kasir.transferFocus();
        }
        if (evt.getKeyCode() == evt.VK_LEFT || evt.getKeyCode() == evt.VK_UP) {
            kasir.transferFocusBackward();
        }
        if (evt.getKeyCode() == evt.VK_ENTER) {
            try {
                String nomor_antrian = nomor.getText();
                iss = crl.lookup(); // lookup panggilan antrian
                int id_antrian = iss.id_number(nomor_antrian);
                iss.cashier_number(nomor_antrian, id_antrian, 4, 1, 5, Integer.parseInt(nomeja.getSelectedItem().toString()));
                close_setup(true);
                close_button(false);
                panggil.setEnabled(true);
                nomor.setText("0000");
            } catch (RemoteException ex) {
                Logger.getLogger(ui_informasi.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_kasirKeyPressed

    private class call_back_tb implements Runnable {

        public void call_back_tb() {
        }

        @Override
        public void run() {
            try {
                mulai.setEnabled(false);
                close_setup(false);
                close_button(false);
                close_button_table(false);
                table1.setEnabled(false);
                table2.setEnabled(false);
                int rows[] = table2.getSelectedRows();
                for (int i = 0; i < rows.length; i++) {
                    iss = crl.lookup(); // lookup panggilan antrian
                    if (table2.getValueAt(rows[i], 0).toString().substring(0, 1).equals("3")) {
                        iss.call_number("Setoran PJ-KARTU", table2.getValueAt(rows[i], 0).toString(), 2, Integer.parseInt(nomeja.getSelectedItem().toString()), 1);
                    } else if (table2.getValueAt(rows[i], 0).toString().substring(0, 1).equals("5")) {
                        iss.call_number("Tab./T-Angs PJ-KARTU", table2.getValueAt(rows[i], 0).toString(), 3, Integer.parseInt(nomeja.getSelectedItem().toString()), 1);
                    }
                    // lookup display
                }
                mulai.setEnabled(true);
                if (nomor.getText().equals("0000")) {
                    close_setup(true);
                    close_button(false);
                    panggil.setEnabled(true);
                } else {
                    close_setup(false);
                    close_button(true);
                    panggil.setEnabled(false);
                }
                if (table2.getRowCount() > 0) {
                    table2.setEnabled(true);
                    close_button_table(true);
                } else {
                    table2.setEnabled(false);
                    close_button_table(false);
                }
            } catch (RemoteException ex) {
                Logger.getLogger(ui_informasi.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private final call_back_tb call_back_tb = new call_back_tb();

    private void tb_accActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_accActionPerformed
        thr = new Thread(call_back_tb);
        thr.start();
    }//GEN-LAST:event_tb_accActionPerformed

    @SuppressWarnings("static-access")
    private void tb_accKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tb_accKeyPressed
        if (evt.getKeyCode() == evt.VK_RIGHT || evt.getKeyCode() == evt.VK_DOWN) {
            tb_acc.transferFocus();
        }
        if (evt.getKeyCode() == evt.VK_LEFT || evt.getKeyCode() == evt.VK_UP) {
            tb_acc.transferFocusBackward();
        }
        if (evt.getKeyCode() == evt.VK_ENTER) {
            thr = new Thread(call_back_tb);
            thr.start();
        }
    }//GEN-LAST:event_tb_accKeyPressed

    private void tb_kasirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_kasirActionPerformed
        try {
            int rows[] = table2.getSelectedRows();
            DefaultTableModel dtm = (DefaultTableModel) table2.getModel();
            for (int i = 0; i < rows.length; i++) {
                String nomor_antrian = table2.getValueAt(rows[i] - i, 0).toString();
                iss = crl.lookup(); // lookup panggilan antrian
                int id_antrian = iss.id_number(nomor_antrian);
                iss.cashier_number(nomor_antrian, id_antrian, 4, 1, 5, Integer.parseInt(nomeja.getSelectedItem().toString()));
                dtm.removeRow(rows[i] - i);
                dtm.fireTableDataChanged();
            }
            if (table2.getRowCount() > 0) {
                table2.setEnabled(true);
                close_button_table(true);
            } else {
                table2.setEnabled(false);
                close_button_table(false);
            }
        } catch (RemoteException ex) {
            Logger.getLogger(ui_informasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tb_kasirActionPerformed

    @SuppressWarnings("static-access")
    private void tb_kasirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tb_kasirKeyPressed
        if (evt.getKeyCode() == evt.VK_RIGHT || evt.getKeyCode() == evt.VK_DOWN) {
            tb_kasir.transferFocus();
        }
        if (evt.getKeyCode() == evt.VK_LEFT || evt.getKeyCode() == evt.VK_UP) {
            tb_kasir.transferFocusBackward();
        }
        if (evt.getKeyCode() == evt.VK_ENTER) {
            try {
                int rows[] = table2.getSelectedRows();
                for (int i = 0; i < rows.length; i++) {
                    String nomor_antrian = table2.getValueAt(rows[i] - i, 0).toString();
                    iss = crl.lookup(); // lookup panggilan antrian
                    int id_antrian = iss.id_number(nomor_antrian);
                    iss.cashier_number(nomor_antrian, id_antrian, 4, 1, 5, Integer.parseInt(nomeja.getSelectedItem().toString()));
                    DefaultTableModel dtm = (DefaultTableModel) table2.getModel();
                    dtm.removeRow(rows[i] - i);
                    dtm.fireTableDataChanged();
                }
                if (table2.getRowCount() > 0) {
                    table2.setEnabled(true);
                    close_button_table(true);
                } else {
                    table2.setEnabled(false);
                    close_button_table(false);
                }
            } catch (RemoteException ex) {
                Logger.getLogger(ui_informasi.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_tb_kasirKeyPressed

    private void table2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table2MouseClicked
        switch (evt.getModifiers()) {
            case InputEvent.BUTTON1_MASK: {
                if (evt.getClickCount() == 2) {
                    try {
                        int row = table2.getSelectedRow();
                        String nomor_antrian = table2.getValueAt(row, 0).toString();
                        iss = crl.lookup(); // lookup panggilan antrian
                        int id_antrian = iss.id_number(nomor_antrian);
                        iss.cashier_number(nomor_antrian, id_antrian, 4, 1, 5, Integer.parseInt(nomeja.getSelectedItem().toString()));
                        DefaultTableModel dtm = (DefaultTableModel) table2.getModel();
                        dtm.removeRow(row);
                        dtm.fireTableDataChanged();

                        if (table2.getRowCount() > 0) {
                            table2.setEnabled(true);
                            close_button_table(true);
                        } else {
                            table2.setEnabled(false);
                            close_button_table(false);
                        }
                    } catch (RemoteException ex) {
                        Logger.getLogger(ui_informasi.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                break;
            }
            case InputEvent.BUTTON2_MASK: {
                break;
            }
            case InputEvent.BUTTON3_MASK: {
                if (evt.getClickCount() == 2) {
                    thr = new Thread(call_back_tb);
                    thr.start();
                }
                break;
            }
        }
    }//GEN-LAST:event_table2MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        ua.connection(con.connection());
        String hostname = null, name = null, category = "0", status = "0";
        String[] data = new String[]{String.valueOf(nomeja.getSelectedIndex() + 1), hostname, name, category, status};
        ua.set_counter(data);
        if (!"Mulai".equals(mulai.getText())) {
            crl.close(ip, nomeja.getSelectedIndex() + 1);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    @SuppressWarnings("Convert2Lambda")
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ui_pjkartu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ui_pjkartu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ui_pjkartu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ui_pjkartu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @SuppressWarnings("override")
            public void run() {
                new ui_pjkartu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel antrian;
    private javax.swing.JButton audit;
    private javax.swing.ButtonGroup buttonGroup1;
    private template.desktop desktop1;
    private javax.swing.JButton hangus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton kasir;
    private javax.swing.JComboBox<String> kategori;
    private template.logo_pjk logo_pjk1;
    private javax.swing.JButton mulai;
    private javax.swing.JTextField nama;
    private javax.swing.JComboBox<String> nomeja;
    private javax.swing.JLabel nomor;
    private javax.swing.JRadioButton normal;
    private template.panel_a panel_a1;
    private template.panel_a panel_a2;
    private template.panel_a panel_a3;
    private template.panel_a panel_a4;
    private template.panel_a panel_a5;
    private template.panel_b panel_b1;
    private template.panel_b panel_b2;
    private template.panel_b panel_b3;
    private template.panel_b panel_b4;
    private template.panel_b panel_b5;
    private template.panel_b panel_b6;
    private javax.swing.JButton panggil;
    private javax.swing.JRadioButton setoran;
    private javax.swing.JButton simpan;
    private javax.swing.JTable table1;
    private javax.swing.JTable table2;
    private javax.swing.JRadioButton tabungan;
    private javax.swing.JButton tb_acc;
    private javax.swing.JButton tb_kasir;
    private javax.swing.JButton ubah;
    private javax.swing.JButton ulang;
    // End of variables declaration//GEN-END:variables
}
